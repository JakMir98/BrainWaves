<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:BrainWaves.ViewModels" 
             xmlns:customControls="clr-namespace:BrainWaves.CustomControls"
             xmlns:resource="clr-namespace:BrainWaves.Resources.Strings"
             xmlns:helpers="clr-namespace:BrainWaves.Helpers"
             NavigationPage.HasNavigationBar="False"
             Title="{Binding Title}"
             BackgroundColor="{AppThemeBinding Dark=Black, Light=CadetBlue}"
             x:Class="BrainWaves.Views.SettingsPage">
    <ContentPage.BindingContext>
        <viewModels:SettingsViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <StackLayout>
            <customControls:CustomToolbar
                    BackgroundColorProp="{StaticResource PrimaryColor}"
                    LeftButtonIsVisibleProp="True"
                    LeftButtonTitleTextProp="{Static resource:Resource.GoBackText}"
                    LeftButtonCommand="{Binding GoBackCommand}"
                    LeftButtonCommandParameter="{Binding GoBackCommand}"
                    LeftButtonTextColorProp="White"
                    TitleText="{Binding Title}"
                    CustomTextColorProp="White"
                    RightButtonIsVisibleProp="False"/>
            <ScrollView Orientation="Vertical">
                <StackLayout Orientation="Vertical">
                    <customControls:SwitchWithLabel
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20" 
                        TitleText="{Static resource:Resource.Theme}"
                        IsChecked="{Binding IsDarkThemeOn}" />

                    <Picker
                        Title="{Binding SelectedLanguage}"
                        TitleColor="NavajoWhite"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        WidthRequest="250"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20"
                        ItemsSource="{Binding AvailableLanguages}"
                        SelectedItem="{Binding SelectedLanguage}">
                    </Picker>

                    <Entry 
                        Placeholder="How much time in minutes"
                        Text="{Binding TimeToSleep, Mode=TwoWay}"
                        PlaceholderColor="NavajoWhite"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        WidthRequest="250"
                        Margin="20"
                        Style="{StaticResource SimpleEntry}"/>

                    <Entry 
                        Placeholder="Sampling freq"
                        Text="{Binding TimeToSleep, Mode=TwoWay}"
                        PlaceholderColor="NavajoWhite"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        WidthRequest="250"
                        Margin="20"
                        Style="{StaticResource SimpleEntry}"/>

                    <StackLayout
                        Orientation="Vertical"
                        Margin="20">
                        <customControls:CheckboxWithLabel
                            VerticalOptions="Center"
                            HorizontalOptions="Center" 
                            TitleText="{Static resource:Resource.AutomaticServiceChoosing}" 
                            IsChecked="{Binding IsAutomaticServiceChoosingActive}"/>

                        <Label
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Text="{Static resource:Resource.ServiceUUIDLabel}"
                            Style="{StaticResource LabelStyleNormal}"
                            TextColor="White"/>
                        <Entry
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Placeholder="{Static resource:Resource.ServiceUUIDLabel}"
                            Text="{Binding ServiceUUID}"/>
                
                        <Label
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Text="{Static resource:Resource.CharacteristicSendUUIDLabel}"
                            Style="{StaticResource LabelStyleNormal}"/>
                        <Entry
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Placeholder="{Static resource:Resource.CharacteristicSendUUIDLabel}"
                            Text="{Binding SendCharacteristicUUID}"/>
                
                        <Label
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Text="{Static resource:Resource.CharacteristicReceiveUUIDLabel}"
                            Style="{StaticResource LabelStyleNormal}"/>
                        <Entry
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Placeholder="{Static resource:Resource.CharacteristicReceiveUUIDLabel}"
                            Text="{Binding ReceiveCharacteristicUUID}"/>
                
                    </StackLayout>

                    <ActivityIndicator
                        Color="Red"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        IsRunning="{Binding IsBusy}"
                        IsVisible="{Binding IsBusy}"/>

                </StackLayout>
            </ScrollView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>