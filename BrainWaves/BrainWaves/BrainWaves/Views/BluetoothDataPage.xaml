<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:resource="clr-namespace:BrainWaves.Resources.Strings"
             xmlns:customControls="clr-namespace:BrainWaves.CustomControls"
             NavigationPage.HasNavigationBar="False"
             BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDarkTheme}, Light={StaticResource BackgroundColorLight}}"
             x:Class="BrainWaves.Views.BluetoothDataPage">

    <ScrollView>
        <StackLayout
            Orientation="Vertical">
            <StackLayout.Margin>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS" Value="0,20,0,0" />
                </OnPlatform>
            </StackLayout.Margin>
            <customControls:CustomToolbar
                BackgroundColorProp="{StaticResource PrimaryColor}"
                LeftButtonIsVisibleProp="True"
                LeftButtonTitleTextProp="{Static resource:Resource.GoBackText}"
                LeftButtonCommand="{Binding GoBackCommand}"
                LeftButtonCommandParameter="{Binding GoBackCommand}"
                LeftButtonTextColorProp="White"
                TitleText="{Binding Title}"
                LabelSizeProp="15"
                CustomTextColorProp="White"
                RightButtonIsVisibleProp="True"
                RightButtonTitleTextProp="{Static resource:Resource.Settings}"
                RightButtonCommand="{Binding GoToSettingsCommand}"
                RightButtonCommandParameter="{Binding GoToSettingsCommand}"
                RightButtonTextColorProp="White"/>

            <customControls:ActivityIndicatorWithLabel
                HorizontalOptionsProp="Center"
                VerticalOptions="Center"
                LeftLabelIsVisible="True"
                LeftTitleText="{Binding BusyMessage}"
                LabelTextColorProp="ForestGreen"
                RightLabelIsVisible="False"
                ActivityIndicatorColorProp="ForestGreen"
                ActivityIndicatorIsVisible="{Binding IsBusy}" />

            <Picker
                Title="{Binding SelectedSettings}"
                TitleColor="{AppThemeBinding Dark=NavajoWhite, Light=Black}"
                TextColor="{AppThemeBinding Dark=White, Light=Black}"
                BackgroundColor="Transparent"
                WidthRequest="300"
                VerticalOptions="Center"
                HorizontalOptions="Center"
                Margin="20"
                ItemsSource="{Binding AvailableSettings}"
                SelectedItem="{Binding SelectedSettings}">
            </Picker>

            <StackLayout
                Orientation="Horizontal"
                VerticalOptions="Center"
                HorizontalOptions="CenterAndExpand">
                <Button
                    Style="{StaticResource ButtonStyleNormal}"
                    Margin="10"
                    Text="{Static resource:Resource.StartMeasure}"
                    Command="{Binding StartCommand}"
                    IsEnabled="{Binding AreButtonsEnabled}"/>

                <Button
                    Style="{StaticResource ButtonStyleNormal}"
                    Margin="10"
                    Text="{Static resource:Resource.Charts}"
                    Command="{Binding GoToChartsCommand}"
                    IsEnabled="{Binding IsGoToChartsEnabled}"/>
            </StackLayout>

            <Label
                Text="{Binding OutputText}"
                VerticalOptions="Center"
                HorizontalOptions="Center"
                Style="{StaticResource LabelStyleNormal}"/>

            <customControls:CheckboxWithLabel
                VerticalOptions="Center"
                HorizontalOptions="Center"
                Margin="20"
                LabelTextColorProp="Red"
                CheckboxColorProp="Red"
                TitleText="{Static resource:Resource.GenerateSinwave}"
                IsChecked="{Binding IsGenerateSinwaveVisible}" />

            <Grid Margin="20"
                  IsVisible="{Binding IsGenerateSinwaveVisible}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <Label
                    Grid.Column="0"
                    Grid.Row="0"
                    Text="{Static resource:Resource.SamplingFreq}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource LabelStyleNormal}"/>

                <Entry
                    Grid.Column="0"
                    Grid.Row="1"
                    Placeholder="{Static resource:Resource.SamplingFreq}"
                    Text="{Binding SinwaveSamplingFreq, Mode=TwoWay}"
                    PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                    TextColor="{AppThemeBinding Dark=White, Light=Black}"
                    BackgroundColor="Transparent"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource SimpleEntry}"
                    Keyboard="Numeric"/>

                <Label
                    Grid.Column="1"
                    Grid.Row="0"
                    Text="{Static resource:Resource.SinwaveLength}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource LabelStyleNormal}"/>

                <Entry
                    Grid.Column="1"
                    Grid.Row="1"
                    Placeholder="{Static resource:Resource.SinwaveLength}"
                    PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                    TextColor="{AppThemeBinding Dark=White, Light=Black}"
                    BackgroundColor="Transparent"
                    VerticalTextAlignment="Center"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Text="{Binding SinwaveLength, Mode=TwoWay}"
                    Style="{StaticResource SimpleEntry}"
                    Keyboard="Numeric"/>

                <Label
                    Grid.Column="0"
                    Grid.Row="2"
                    Text="{Static resource:Resource.SinwaveAmplitude}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource LabelStyleNormal}"/>

                <Entry
                    Grid.Column="0"
                    Grid.Row="3"
                    Placeholder="{Static resource:Resource.SinwaveAmplitude}"
                    Text="{Binding SinwaveAmplitude, Mode=TwoWay}"
                    PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                    TextColor="{AppThemeBinding Dark=White, Light=Black}"
                    BackgroundColor="Transparent"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource SimpleEntry}"
                    Keyboard="Numeric"/>

                <Label
                    Grid.Column="1"
                    Grid.Row="2"
                    Text="{Static resource:Resource.SinwaveFreqency}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource LabelStyleNormal}"/>

                <Entry
                    Grid.Column="1"
                    Grid.Row="3"
                    Placeholder="{Static resource:Resource.SinwaveFreqency}"
                    PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                    TextColor="{AppThemeBinding Dark=White, Light=Black}"
                    BackgroundColor="Transparent"
                    VerticalTextAlignment="Center"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Text="{Binding SinwaveFrequency,Mode=TwoWay}"
                    Style="{StaticResource SimpleEntry}"
                    Keyboard="Numeric"/>

                <!--
                <Entry
                   Grid.Row="3"
                   Grid.Column="0"
                   BackgroundColor="Transparent"
                   Style="{StaticResource SimpleEntry}"
                   Text="{Binding EntryText}"
                   TextColor="{AppThemeBinding Dark={StaticResource TextColorDarkTheme}, Light={StaticResource TextColorLight}}"/>

                <Button
                    Grid.Row="3"
                    Grid.Column="1"
                    Style="{StaticResource ButtonStyleNormal}"
                    Margin="10"
                    IsVisible="{Binding AreButtonsEnabled}"
                    Text="Send command"
                    Command="{Binding SendCommand}"/>
                -->

                <Button
                    Grid.Row="4"
                    Grid.ColumnSpan="2"
                    Style="{StaticResource ButtonStyleNormal}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Margin="10"
                    Text="{Static resource:Resource.GenerateText}"
                    Command="{Binding CalculateCommand}"/>
            </Grid>
        </StackLayout>
    </ScrollView>
</ContentPage>