<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:resource="clr-namespace:BrainWaves.Resources.Strings"
             xmlns:customControls="clr-namespace:BrainWaves.CustomControls"
             xmlns:views="clr-namespace:BrainWaves.Views.Views" 
             xmlns:helpers="clr-namespace:BrainWaves.Helpers"
             NavigationPage.HasNavigationBar="False"
             BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDarkTheme}, Light={StaticResource BackgroundColorLight}}"
             x:Class="BrainWaves.Views.BluetoothDataPage">

    <Grid>
        <Grid.Margin>
            <OnPlatform x:TypeArguments="Thickness">
                <On Platform="iOS" Value="0,20,0,0" />
            </OnPlatform>
        </Grid.Margin>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="8*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <customControls:CustomToolbar
            Grid.Row="0"
            BackgroundColorProp="{StaticResource PrimaryColor}"
            LeftButtonTextSizeProp="15.0"
            LeftButtonIsVisibleProp="True"
            LeftButtonTitleTextProp="{Static resource:Resource.GoBackText}"
            LeftButtonCommand="{Binding GoBackCommand}"
            LeftButtonCommandParameter="{Binding GoBackCommand}"
            LeftButtonTextColorProp="White"
            TitleText="{Binding Title}"
            LabelSizeProp="15"
            CustomTextColorProp="White"
            RightButtonTextSizeProp="15.0"
            RightButtonIsVisibleProp="True"
            RightButtonTitleTextProp="{Static resource:Resource.Settings}"
            RightButtonCommand="{Binding GoToSettingsCommand}"
            RightButtonCommandParameter="{Binding GoToSettingsCommand}"
            RightButtonTextColorProp="White"
            ActivityIndicatorColorProp="Red"
            ActivityIndicatorIsVisible="{Binding IsBusy}"
            ActivityIndicatorLabelTextColorProp="Red"
            ActivityIndicatorLabelTitleText="{Binding BusyMessage}"
            ActivityIndicatorWidthProp="75"/>
        
        <ScrollView
            Grid.Row="1">
            <StackLayout
                Orientation="Vertical">
                <StackLayout 
                    RadioButtonGroup.GroupName="MeasureType" 
                    RadioButtonGroup.SelectedValue="{Binding SelectedMeasurement}"
                    HorizontalOptions="Center"
                    Margin="20">
                    <Label 
                        Text="{Static resource:Resource.MeasurementType}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Style="{StaticResource LabelStyleTitle}"/>

                    <RadioButton 
                        Content="{Static resource:Resource.TimeFreqMeasurement}"
                        Value="{Static resource:Resource.TimeFreqMeasurement}"
                        BackgroundColor="Transparent"
                        IsChecked="True"/>

                    <RadioButton 
                        Content="{Static resource:Resource.WavesMeasurements}"
                        Value="{Static resource:Resource.WavesMeasurements}"
                        BackgroundColor="Transparent"/>

                    <RadioButton 
                        Content="{Static resource:Resource.TestMeasurements}"
                        Value="{Static resource:Resource.TestMeasurements}"
                        BackgroundColor="Transparent"/>
                </StackLayout>

                <Label
                    Text="{Binding OutputText}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Style="{StaticResource LabelStyleNormal}"/>

                <ProgressBar 
                    ProgressColor="Red"
                    Progress="{Binding Progress}"
                    IsVisible="{Binding ProgressBarIsVisible}"
                    Margin="20"/>

                <Button
                    Style="{StaticResource ButtonStyleNormal}"
                    WidthRequest="150"
                    Margin="20,10,20,10"
                    Text="{Static resource:Resource.CancelMeasure}"
                    Command="{Binding CancelCommand}"
                    IsVisible="{Binding IsCancelVisible}"/>


                <!-- TIME FREQ MEASUREMENTS-->
                <StackLayout
                    Orientation="Vertical"
                    IsVisible="{Binding IsTimeFreqMesVisible}">
                    <Picker
                        Title="{Binding SelectedSettings}"
                        TitleColor="{AppThemeBinding Dark=NavajoWhite, Light=Black}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        BackgroundColor="Transparent"
                        WidthRequest="300"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20,10,20,10"
                        ItemsSource="{Binding AvailableSettings}"
                        SelectedItem="{Binding SelectedSettings}">
                    </Picker>

                    <Button
                        Grid.Column="0"
                        Grid.Row="0"
                        Style="{StaticResource ButtonStyleNormal}"
                        WidthRequest="150"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.StartMeasure}"
                        Command="{Binding StartCommand}"
                        IsEnabled="{Binding IsReadButtonEnabled}"/>

                    <Button
                        Grid.Column="0"
                        Grid.Row="1"
                        Style="{StaticResource ButtonStyleNormal}"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.Charts}"
                        Command="{Binding GoToChartsCommand}"
                        IsEnabled="{Binding IsGoToChartsEnabled}"/>
                </StackLayout>

                <!-- WAVES MEASUREMENTS-->
                <StackLayout
                    Orientation="Vertical"
                    IsVisible="{Binding IsWavesVisible}">
                    <Button
                        Grid.Column="0"
                        Grid.Row="0"
                        Style="{StaticResource ButtonStyleNormal}"
                        WidthRequest="150"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.StartOneHourMeasure}"
                        Command="{Binding StartOnehourMeasurementCommand}"
                        IsEnabled="{Binding IsReadButtonEnabled}"/>

                    <Button
                        Grid.Column="1"
                        Grid.Row="1"
                        Style="{StaticResource ButtonStyleNormal}"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.ChartsWaves}"
                        Command="{Binding GoToWaveChartsPageCommand}"
                        IsEnabled="{Binding IsGoToWavesChartsEnabled}"/>
                    <!--"IsEnabled="{Binding IsGoToChartsEnabled}"-->
                </StackLayout>

                <!-- TEST SIGNAL-->
                <StackLayout
                    IsVisible="{Binding IsTestSigVisible}">

                    <Label
                        Text="{Static resource:Resource.HowManyTimesToSendTestSignal}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Style="{StaticResource LabelStyleNormal}"/>
                    
                    <Entry 
                        Placeholder="{Static resource:Resource.HowManyTimesToSendTestSignal}"
                        Text="{Binding HowManyTimesSendTestSignal, Mode=TwoWay}"
                        PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        BackgroundColor="Transparent"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Style="{StaticResource SimpleEntry}"
                        Margin="20,10,20,10"
                        Keyboard="Numeric"/>

                    <Label
                        Text="{Static resource:Resource.SamplingFreq}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Style="{StaticResource LabelStyleNormal}"/>

                    <Entry 
                        Placeholder="{Static resource:Resource.SamplingFreq}"
                        Text="{Binding TestSingnalSamplingFreq, Mode=TwoWay}"
                        PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        BackgroundColor="Transparent"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Style="{StaticResource SimpleEntry}"
                        Margin="20,10,20,10"
                        Keyboard="Numeric"/>

                    <Button
                        Style="{StaticResource ButtonStyleNormal}"
                        WidthRequest="150"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.TestSignalButton}"
                        Command="{Binding SendTestSignalCommand}"
                        IsEnabled="{Binding IsReadButtonEnabled}"/>

                    <Button
                        Style="{StaticResource ButtonStyleNormal}"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.Charts}"
                        Command="{Binding GoToChartsCommand}"
                        IsEnabled="{Binding IsGoToChartsEnabled}"/>

                    <Button
                        Style="{StaticResource ButtonStyleNormal}"
                        Margin="20,10,20,10"
                        Text="{Static resource:Resource.ExportData}"
                        Command="{Binding ExportTestResultCommand}"
                        IsEnabled="{Binding IsExportTestResultEnabled}"/>

                    <!-- GENERATE SINWAVE -->
                    <customControls:CheckboxWithLabel
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20"
                        LabelTextColorProp="Red"
                        CheckboxColorProp="Red"
                        TitleText="{Static resource:Resource.GenerateSinwave}"
                        IsChecked="{Binding IsGenerateSinwaveVisible}" 
                        IsEnabled="{Binding IsCancelVisible, Converter={helpers:InverseBoolConverter}}"/>

                    <Grid Margin="20"
                        IsVisible="{Binding IsGenerateSinwaveVisible}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <Label
                            Grid.Column="0"
                            Grid.Row="0"
                            Text="{Static resource:Resource.SamplingFreq}"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Style="{StaticResource LabelStyleNormal}"/>

                        <Entry
                            Grid.Column="0"
                            Grid.Row="1"
                            Placeholder="{Static resource:Resource.SamplingFreq}"
                            Text="{Binding SinwaveViewModel.SinwaveSamplingFreq, Mode=TwoWay}"
                            PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Style="{StaticResource SimpleEntry}"
                            Keyboard="Numeric"/>

                        <Label
                            Grid.Column="1"
                            Grid.Row="0"
                            Text="{Static resource:Resource.SinwaveLength}"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Style="{StaticResource LabelStyleNormal}"/>

                        <Entry
                            Grid.Column="1"
                            Grid.Row="1"
                            Placeholder="{Static resource:Resource.SinwaveLength}"
                            PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalTextAlignment="Center"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Text="{Binding SinwaveViewModel.SinwaveLength, Mode=TwoWay}"
                            Style="{StaticResource SimpleEntry}"
                            Keyboard="Numeric"/>

                        <Label
                            Grid.Column="0"
                            Grid.Row="2"
                            Text="{Static resource:Resource.SinwaveAmplitude}"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Style="{StaticResource LabelStyleNormal}"/>

                        <Entry
                            Grid.Column="0"
                            Grid.Row="3"
                            Placeholder="{Static resource:Resource.SinwaveAmplitude}"
                            Text="{Binding SinwaveViewModel.SinwaveAmplitude, Mode=TwoWay}"
                            PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Style="{StaticResource SimpleEntry}"
                            Keyboard="Numeric"/>

                        <Label
                            Grid.Column="1"
                            Grid.Row="2"
                            Text="{Static resource:Resource.SinwaveFreqency}"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Style="{StaticResource LabelStyleNormal}"/>

                        <Entry
                            Grid.Column="1"
                            Grid.Row="3"
                            Placeholder="{Static resource:Resource.SinwaveFreqency}"
                            PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalTextAlignment="Center"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Text="{Binding SinwaveViewModel.SinwaveFrequency,Mode=TwoWay}"
                            Style="{StaticResource SimpleEntry}"
                            Keyboard="Numeric"/>

                        <Button
                            Grid.Row="4"
                            Grid.ColumnSpan="2"
                            Style="{StaticResource ButtonStyleNormal}"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Margin="10"
                            Text="{Static resource:Resource.GenerateText}"
                            Command="{Binding GenerateCommand}"/>
                    </Grid>
                </StackLayout>

                <views:GameView BindingContext="{Binding GameViewModel}"/>
            </StackLayout>
        </ScrollView>
    </Grid>
</ContentPage>