<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:BrainWaves.ViewModels" 
             xmlns:customControls="clr-namespace:BrainWaves.CustomControls"
             xmlns:resource="clr-namespace:BrainWaves.Resources.Strings"
             xmlns:helpers="clr-namespace:BrainWaves.Helpers"
             NavigationPage.HasNavigationBar="False"
             BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDarkTheme}, Light={StaticResource BackgroundColorLight}}"    
             x:Class="BrainWaves.Views.SettingsPage">
    <ContentPage.BindingContext>
        <viewModels:SettingsViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <StackLayout>
            <StackLayout.Margin>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS" Value="0,20,0,0" />
                </OnPlatform>
            </StackLayout.Margin>
            <customControls:CustomToolbar
                    BackgroundColorProp="{StaticResource PrimaryColor}"
                    LeftButtonIsVisibleProp="True"
                    LeftButtonTitleTextProp="{Static resource:Resource.GoBackText}"
                    LeftButtonTextSizeProp="15.0"
                    LeftButtonCommand="{Binding GoBackCommand}"
                    LeftButtonCommandParameter="{Binding GoBackCommand}"
                    LeftButtonTextColorProp="White"
                    TitleText="{Binding Title}"
                    LabelSizeProp="25.0"
                    CustomTextColorProp="White"
                    RightButtonIsVisibleProp="False"
                    ActivityIndicatorColorProp="Red"
                    ActivityIndicatorIsVisible="{Binding IsBusy}"
                    ActivityIndicatorLabelTextColorProp="Red"
                    ActivityIndicatorLabelTitleText="{Binding BusyMessage}"
                    ActivityIndicatorWidthProp="75"/>
            
            <ScrollView Orientation="Vertical">
                <StackLayout Orientation="Vertical">
                    <customControls:SwitchWithLabel
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20"
                        LeftLabelTextColorProp="Red"
                        LeftTitleText="{Static resource:Resource.Theme}"
                        IsChecked="{Binding IsDarkThemeOn}" />

                    <Picker
                        Title="{Binding SelectedLanguage}"
                        TitleColor="{AppThemeBinding Dark=NavajoWhite, Light=Black}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        BackgroundColor="Transparent"
                        WidthRequest="250"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20"
                        ItemsSource="{Binding AvailableLanguages}"
                        SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}">
                    </Picker>

                    <customControls:CheckboxWithLabel
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Margin="20"
                        LabelTextColorProp="Red"
                        CheckboxColorProp="Red"
                        TitleText="{Static resource:Resource.ShouldCalculateFFT}"
                        IsChecked="{Binding ShouldCalculateFftOnLoad}" />

                    <Label
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Text="{Static resource:Resource.TimeToReadMindInMin}"
                        Style="{StaticResource LabelStyleNormal}"
                        TextColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"/>
                    <Entry 
                        Placeholder="{Static resource:Resource.TimeToReadMindInMin}"
                        Text="{Binding TimeToReadMindInMinutes, Mode=TwoWay}"
                        PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        BackgroundColor="{Binding EntryTimeToReadMindColor}"
                        Style="{StaticResource SimpleEntry}"
                        Margin="0,0,0,20"
                        Keyboard="Numeric"/>

                    <Label
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Text="{Static resource:Resource.SamplingFreq}"
                        Style="{StaticResource LabelStyleNormal}"
                        TextColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"/>
                    <Entry 
                        Placeholder="{Static resource:Resource.SamplingFreq}"
                        Text="{Binding SamplingFrequency, Mode=TwoWay}"
                        PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        BackgroundColor="{Binding EntrySamplingFreqColor}"
                        Style="{StaticResource SimpleEntry}"
                        Margin="0,0,0,20"
                        Keyboard="Numeric"/>

                    <Label
                        VerticalOptions="Center"
                        Text="{Static resource:Resource.CutoffFreqForLowPasFilter}"
                        Style="{StaticResource LabelStyleNormal}"
                        HorizontalTextAlignment="Center"
                        HorizontalOptions="Center"
                        TextColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"/>
                    <Entry 
                        Placeholder="{Static resource:Resource.CutoffFreqForLowPasFilter}"
                        Text="{Binding CutoffFreqOfLowPassFilter, Mode=TwoWay}"
                        PlaceholderColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"
                        TextColor="{AppThemeBinding Dark=White, Light=Black}"
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        Style="{StaticResource SimpleEntry}"
                        BackgroundColor="Transparent"
                        Margin="0,0,0,20"
                        Keyboard="Numeric"/>

                    <StackLayout
                        Orientation="Vertical"
                        Margin="20">
                        <customControls:CheckboxWithLabel
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            LabelTextColorProp="Red"
                            CheckboxColorProp="Red"
                            TitleText="{Static resource:Resource.AutomaticServiceChoosing}" 
                            IsChecked="{Binding IsAutomaticServiceChoosingActive}"/>

                        <Label
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Text="{Static resource:Resource.ServiceUUIDLabel}"
                            Style="{StaticResource LabelStyleNormal}"
                            TextColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"/>
                        <Entry
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Placeholder="{Static resource:Resource.ServiceUUIDLabel}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalTextAlignment="Center"
                            Text="{Binding ServiceUUID}"
                            Style="{StaticResource SimpleEntry}"/>

                        <Label
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Text="{Static resource:Resource.CharacteristicSendUUIDLabel}"
                            Style="{StaticResource LabelStyleNormal}"
                            TextColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"/>
                        <Entry
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Placeholder="{Static resource:Resource.CharacteristicSendUUIDLabel}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalTextAlignment="Center"
                            Text="{Binding SendCharacteristicUUID}"
                            Style="{StaticResource SimpleEntry}"/>

                        <Label
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Text="{Static resource:Resource.CharacteristicReceiveUUIDLabel}"
                            Style="{StaticResource LabelStyleNormal}"
                            TextColor="{AppThemeBinding Dark=NavajoWhite, Light={StaticResource TextColorLight}}"/>
                        <Entry
                            IsVisible="{Binding IsAutomaticServiceChoosingActive, Converter={helpers:InverseBoolConverter}}"
                            Placeholder="{Static resource:Resource.CharacteristicReceiveUUIDLabel}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                            BackgroundColor="Transparent"
                            VerticalTextAlignment="Center"
                            Text="{Binding ReceiveCharacteristicUUID}"
                            Style="{StaticResource SimpleEntry}"/>
                    </StackLayout>
                </StackLayout>
            </ScrollView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>